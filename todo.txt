TODO:
=====

HIGH PRIORITY
-------------
o  tool: Add optimisations to unsolve
o  tool: Better warnings on tool when running out of memory (currently tends to get killed by host when it uses too much)
o  tool: Better handling when hitting max_depth limits (keep going but with warning that some have been discarded)
o  web: Check css media brackets on chrome
o  general: add more code comments


LOW PRIORITY
------------
o  tool: solve: optional best_depth instead of best_moves
o  Publish!
o  Consider adding an undo button



THOUGHTS ON SOLVER:
-------------------

Current method:
We use CMPDATA:
human x,
human y,
blocks --> location of boxxes

Pretty efficient already...
Can we remove the maps that AREN'T pre- or post-key move locations?

SpLevel is CMPDATA plus level width and height!
--> We might be able to rewrite to just use CMPDATA instead of including level width and height - I htink I tried this before and there was basically no improvement

A PathMap (which is where our loop starts) has CMPDATA+levelw+levelh+SHRUNKPATH+depth (+flag)
Here we are using SHRUNKPATH to figure out where we came from in terms of solving the level.
SHRUNKPATH is 512 bits long.
Could we store something smaller, that we could re-create our path from later?
We could store a list of human_x and human_y from previous key moves (that's 16 bits per depth, though... at 50 depth, it's over the size of SHRUNKPATH)
We could store a list of MOVECOUNT that it took to get to each key move... that's only 8 bits per depth... with 128 depth it'd be 1024 bits
We'd have to add this together to get path length... or store a *running total* as well
So a super-shrunk-path would be move_counts[u8; MAX_DEPTH e.g. 128] and u16 total_moves
It wouldn't improve the core performance, but it'd work better for larger maps (the new limit would be 255 moves between key moves, rather than in total)

Is there a SMART way to discard maps from non_contenders? (These are basically places we've been before).
All we have is the cmp_data (boxx location) and the length of the path it took us to get there.
